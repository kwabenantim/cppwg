// This file is automatically generated by cppwg.
// Do not modify this file directly.

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include "wrapper_header_collection.cppwg.hpp"

#include "Shape_2.cppwg.hpp"

namespace py = pybind11;
typedef Shape<2> Shape_2;
PYBIND11_DECLARE_HOLDER_TYPE(T, std::shared_ptr<T>);

void register_Shape_2_class(py::module &m)
{
    py::class_<Shape_2, std::shared_ptr<Shape_2>>(m, "Shape_2")
        .def(py::init<>())
        .def("GetIndex",
            (unsigned int(Shape_2::*)() const) &Shape_2::GetIndex,
            " ")
        .def("rGetVertices",
            (::std::vector<std::shared_ptr<Point<2>>> const &(Shape_2::*)() const) &Shape_2::rGetVertices,
            " ", py::return_value_policy::reference_internal)
        .def("SetIndex",
            (void(Shape_2::*)(unsigned int)) &Shape_2::SetIndex,
            " ", py::arg("index"))
        .def("SetVertices",
            (void(Shape_2::*)(::std::vector<std::shared_ptr<Point<2>>> const &)) &Shape_2::SetVertices,
            " ", py::arg("rVertices"))
        .def("AddVertex",
            (void(Shape_2::*)(::std::shared_ptr<Point<2>>)) &Shape_2::AddVertex,
            " ", py::arg("point") = std::make_shared<Point<2>>())
    ;
}
